
.under-nav {
    position: absolute;
    top: 100%;
    width: 100%;
    height: 60px;
    left: 0;
    background-color: rgb(212, 0, 0);
    display: none;

    ul {
        width: 100%;
        height: 100%;
        display: flex;
        justify-content: center;
        align-items: center;
        align-content: center;
    }
}


.section-tab {



    span.active {
        color: white;
        background-color: red;

        div.line {
            background-color: white !important;
        }
    }

    .tab_item {
        display: none;
    }

    .tab_item:first-child {
        display: block;
    }

    .tab_content {
        background: transparent linear-gradient(180deg, #FF0000 0%, #800000 100%) 0% 0% no-repeat padding-box;
        box-shadow: 0px 5px 6px #00000029;
    }




    .wrapper-tab {

        .tabs {
            .container {
                display: flex;
                flex-direction: row;
                justify-content: center;

                .tab {
                    // background-color: red;
                    width: 100%;
                    border-top-right-radius: 20px;
                    border-top-left-radius: 20px;
                    border: 1px solid grey;
                    border-bottom: none;
                    height: 70px;

                    div.line {
                        width: 60px;
                        background-color: red;
                        height: 4px;
                        margin-left: 10px;
                    }

                    p {
                        width: 100%;
                        text-align: center;
                        font-size: 30px;
                    }
                }
            }
        }
    }




    .wrapper {

        position: relative;

    }

    /**
 * Padding is set relative to the width
 * of the element, so here padding-top:60% is
 * a percentage of the width. This allows us 
 * to set the height as a ratio of the width
 *
 */
    .carousel, .carousel2, .carousel3 {
        width: 100%;
        position: relative;
        padding-top: 60%;
        overflow: hidden;
    }

   


    .inner {
        width: 100%;
        height: 100%;
        position: absolute;
        top: 0;
        left: 0;
    }

    /**
 * ==========================
 * Animation styles
 * 
 * Notes:
 * 1. We use z-index to position active slides in-front 
 * of non-active slides
 * 2. We set right:0 and left:0 on .slide to provide us with
 * a default positioning on both sides of the slide. This allows 
 * us to trigger JS and CSS3 animations easily
 *
 */
    .slide {
        width: 100%;
        height: 100%;
        position: absolute;
        top: 0;
        right: 0;
        left: 0;
        z-index: 1;
        opacity: 0;
    }

    .slide.active,
    .slide.left,
    .slide.right {
        z-index: 2;
        opacity: 1;
    }

    /**
 * ==========================
 * JS animation styles
 * 
 * We use jQuery.animate to control the sliding animations
 * when CSS3 animations are not available. In order for
 * the next slide to slide in from the right, we need
 * to change the left:0 property of the slide to left:auto
 *
 */

    .js-reset-left {
        left: auto
    }

    /**
 * ==========================
 * CSS animation styles
 * 
 * .slide.left and .slide.right set-up
 * the to-be-animated slide so that it can slide
 * into view. For example, a slide that is about 
 * to slide in from the right will:
 * 1. Be positioned to the right of the viewport (right:-100%)
 * 2. Slide in when the style is superseded with a more specific style (right:0%)
 *
 */
    .slide.left {
        left: -100%;
        right: 0;
    }

    .slide.right {
        right: -100%;
        left: auto;
    }

    .transition .slide.left {
        left: 0%
    }

    .transition .slide.right {
        right: 0%
    }

    /**
 * The following classes slide the previously active
 * slide out of view before positioning behind the 
 * currently active slide
 *
 */
    .transition .slide.shift-right {
        right: 100%;
        left: auto
    }

    .transition .slide.shift-left {
        left: 100%;
        right: auto
    }

    /**
 * This sets the CSS properties that will animate. We set the
 * transition-duration property dynamically via JS.
 * We use the browser's default transition-timing-function
 * for simplicity's sake
 * 
 * It is important to note that we are using CodePen's inbuilt
 * CSS3 property prefixer. For your own projects, you will need
 * to prefix the transition and transform properties here to ensure
 * reliable support across browsers
 *
 */
    .transition .slide {
        transition-property: right, left, margin;
    }

    /**
 * ==========================
 * Indicators
 *
 */
    .indicators {
        width: 100%;
        position: absolute;
        bottom: 0;
        z-index: 4;
        padding: 0;
        text-align: center;
    }

    .indicators li {
        width: 15px;
        height: 15px;
        display: inline-block;
        margin: 5px;
        

        border: 1.5px solid white;
        list-style-type: none;
        border-radius: 50%;
        cursor: pointer;
        transition: background 0.3s ease-out;
    }

    .indicators li.active {
        background: white;
    }

    .indicators li:hover {
        background-color: #2b2b2b;
    }

    /**
 * ==========================
 * Arrows 
 *
 */
    .arrow {
        width: 20px;
        height: 20px;
        position: absolute;
        top: 50%;
        z-index: 9999;
        border-top: 3px solid #fff;
        border-right: 3px solid #fff;
        cursor: pointer;
        transition: border-color 0.3s ease-out;
    }

    .arrow:hover {
        border-color: #93278f
    }

    .arrow-left {
        left: 20px;
        transform: rotate(225deg);
    }

    .arrow-right {
        right: 20px;
        transform: rotate(45deg);
    }

    .arrow-left2 {
        left: 20px;
        transform: rotate(225deg);
    }

    .arrow-right2 {
        right: 20px;
        transform: rotate(45deg);
    }

    .arrow-left3 {
        left: 20px;
        transform: rotate(225deg);
    }

    .arrow-right3 {
        right: 20px;
        transform: rotate(45deg);
    }


    /**
 * ==========================
 * For demo purposes only
 * 
 * Please note that the styles below are used
 * for the purposes of this demo only. There is no need
 * to use these in any of your own projects
 *
 */
    .slide {}



    .slide:nth-child(1) {
        display: flex;
        flex-direction: row;
        justify-content: space-between;
        align-items: center;
        align-content: center;

        div.item {
            width: 300px;
            height: 450px;

            background: transparent linear-gradient(180deg, #878787D6 0%, #060606E8 100%) 0% 0% no-repeat padding-box;
            border-radius: 20px;
        }
    }

    .slide:nth-child(2) {}

    .slide:nth-child(3) {}




}